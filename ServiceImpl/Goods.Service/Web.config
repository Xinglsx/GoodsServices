<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="GoodsEntities" connectionString="data source=HIS-LISX\HRPSERVER;initial catalog=Goods;persist security info=True;user id=sa;pwd=123;MultipleActiveResultSets=True;App=EntityFramework" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>
  <system.serviceModel>
    <services>
      <service name="Goods.Service.BaseInfoService">
        <!-- Service Endpoints -->
        <!-- 除非完全限定，否则地址相对于上面提供的基址-->
        <endpoint address="" binding="webHttpBinding" behaviorConfiguration="webBehavior" contract="Goods.ServiceConstract.IBaseInfoService">
          <!--部署时，应删除或替换下列标识元素，以反映用来运行所部署服务的标识。删除之后，WCF 将自动推断相应标识。-->
          <identity>
            <dns value="localhost"/>
          </identity>
        </endpoint>
        <!-- Metadata Endpoints -->
        <!-- 元数据交换终结点供相应的服务用于向客户端做自我介绍。 -->
        <!-- 此终结点不使用安全绑定，应在部署前确保其安全或将其删除-->
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- 为避免泄漏元数据信息，请在部署前将以下值设置为 false -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- 要接收故障异常详细信息以进行调试，请将以下值设置为 true。在部署前设置为 false 以避免泄漏异常信息 -->
          <serviceDebug includeExceptionDetailInFaults="false" />
        </behavior>
      </serviceBehaviors>
      <endpointBehaviors>
        <behavior name="webBehavior">
          <webHttp helpEnabled="true"/>
        </behavior>
      </endpointBehaviors>
    </behaviors>
    
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true" />
    <!--
        若要在调试过程中浏览 Web 应用程序根目录，请将下面的值设置为 True。
        在部署之前将该值设置为 False 可避免泄露 Web 应用程序文件夹信息。
      -->
    <directoryBrowse enabled="true" />
  </system.webServer>

  <log4net>
    <appender name="WebLogFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <!--日志文件路径,按文件大小方式输出时在这里指定文件名，并且前面的日志按天在文件名后自动添加当天日期形成文件-->
      <param name="File" value="Logs\"/>
      <!--是否追加到文件-->
      <param name="AppendToFile" value="true"/>
      <!--记录日志写入文件时，不锁定文本文件-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--Unicode编码-->
      <Encoding value="UTF-8"/>
      <!--最多产生的日志文件数，value="－1"为不限文件数-->
      <param name="MaxSizeRollBackups" value="10"/>
      <!--是否只写到一个文件中-->
      <param name="StaticLogFileName" value="false"/>
      <!--按照何种方式产生多个日志文件(日期[Date],文件大小[Size],混合[Composite])-->
      <param name="RollingStyle" value="Date"/>
      <!--按日期产生文件夹，文件名［在日期方式与混合方式下使用］-->
      <param name="DatePattern" value="yyyyMMdd&quot;-GoodsService.log&quot;"/>
      <!--每个文件的大小。只在混合方式与文件大小方式下使用，超出大小的在文件名后自动增加1重新命名-->
      <param name="maximumFileSize" value="5000KB"/>
      <!--记录的格式。-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="================== %d [%t] %-5p %c [%x] &lt;%X{auth}&gt; ================== %n - %m%n"/>
      </layout>
    </appender>

    <logger name="WebLog.Logger">
      <level value="ERROR"/>
      <level value="INFO"/>
      <appender-ref ref="WebLogFileAppender"/>
    </logger>
  </log4net>
</configuration>